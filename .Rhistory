save(differential_genes,enr, file = file.path(init$data_folder,"datasets" , input$name, 'supervised',paste0('gene_enrichment.RData')))
differential_genes
knitr::opts_chunk$set(echo = TRUE,cache = TRUE,autodep=TRUE)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(grid)
source("~/Documents/Scripts/all_functions.r")
shiny_env = new.env()
load("/home/pprompsy/Documents/GitLab/scChIPseq/datasets/HBCx_95_human_paper/reduced_data/HBCx_95_human_paper_1600_1_95_uncorrected_annotFeat.RData",envir=shiny_env)
load("/home/pprompsy/Documents/GitLab/scChIPseq/datasets/HBCx_95_human_paper/reduced_data/HBCx_95_human_paper_1600_1_95_uncorrected_normMat.RData",envir=shiny_env)
load("/home/pprompsy/Documents/GitLab/scChIPseq/datasets/HBCx_95_human_paper/reduced_data/HBCx_95_human_paper_1600_1_95_uncorrected.RData",envir=shiny_env)
load("/home/pprompsy/Documents/GitLab/scChIPseq/datasets/HBCx_95_human_paper/consclust/HBCx_95_human_paper_affectation_k2.RData",envir=shiny_env)
load("/home/pprompsy/Documents/GitLab/scChIPseq/datasets/HBCx_95_human_paper/cor_filtered_data/HBCx_95_human_paper_99_2.RData",envir=shiny_env)
load("/home/pprompsy/Documents/GitLab/scChIPseq/datasets/HBCx_95_human_paper/supervised/HBCx_95_human_paper_2_0.01_1_.RData",envir=shiny_env)
shiny_env$enrich_tab_C1 = read_delim(delim = ",","/home/pprompsy/Documents/GitLab/scChIPseq/datasets/HBCx_95_human_paper/supervised/C1_depleted_gene_sets.csv")
shiny_env$enrich_tab_C2 = read_delim(delim = ",","/home/pprompsy/Documents/GitLab/scChIPseq/datasets/HBCx_95_human_paper/supervised/C2_depleted_gene_sets.csv")
original=new.env()
load("/run/user/1000/gvfs/smb-share:server=zserver,share=umr3244/equipe_vallot/commun/Bioinfo/scChIPseq_analysis/Grosselin_human_HBCx95/woCNV/human_PCA_based_fixedWin_NbMinCounts1600/RData/norm_mat.RData",envir= original)
load("/run/user/1000/gvfs/smb-share:server=zserver,share=umr3244/equipe_vallot/commun/Bioinfo/scChIPseq_analysis/Grosselin_human_HBCx95/woCNV/human_PCA_based_fixedWin_NbMinCounts1600/RData/pca.RData",envir= original)
load("/run/user/1000/gvfs/smb-share:server=zserver,share=umr3244/equipe_vallot/commun/Bioinfo/scChIPseq_analysis/Grosselin_human_HBCx95/woCNV/human_PCA_based_fixedWin_NbMinCounts1600/RData/Consensus_clustering.RData",envir= original)
load("/run/user/1000/gvfs/smb-share:server=zserver,share=umr3244/equipe_vallot/commun/Bioinfo/scChIPseq_analysis/Grosselin_human_HBCx95/woCNV/human_PCA_based_fixedWin_NbMinCounts1600/RData/tsne.RData",envir= original)
load("/run/user/1000/gvfs/smb-share:server=zserver,share=umr3244/equipe_vallot/commun/Bioinfo/scChIPseq_analysis/Grosselin_human_HBCx95/woCNV/human_PCA_based_fixedWin_NbMinCounts1600/RData/BC976_hg38_Classsif_CC_2.RData",envir= original)
load("/run/user/1000/gvfs/smb-share:server=zserver,share=umr3244/equipe_vallot/commun/Bioinfo/scChIPseq_analysis/Grosselin_human_HBCx95/woCNV/Supervised_review/RData/Supervised_res_Wilcox_object.Rdata",envir= original)
original$enrich_tab_C2 = read_delim(delim = ";","/run/user/1000/gvfs/smb-share:server=zserver,share=umr3244/equipe_vallot/commun/Bioinfo/scChIPseq_analysis/Grosselin_human_HBCx95/woCNV/Supervised_review/Tables/Gene_set_analysis/Enrichment_test_C2_vs_C1_MSigDB_Under.csv")
#Comparing Colsums
head(colSums(shiny_env$norm_mat))
head(colSums(original$norm_mat))
#Comparing Rowsums
head(rowSums(shiny_env$norm_mat))
head(rowSums(original$norm_mat))#Comparing Rowsums
head(dim(shiny_env$norm_mat))
head(dim(original$norm_mat))
print("Shiny pca variance")
diag(var(shiny_env$pca[,1:10]))
print("Original pca variance")
diag(var(original$pca$x[,1:10]))
p1 <- ggplot(as_tibble(shiny_env$pca)) + geom_point(aes(x=PC1, y=PC2) ,color="red") + ggtitle("Shiny PCA")
p2 <- ggplot(as_tibble(original$pca$x)) + geom_point(aes(x=PC1, y=PC2), color ="blue") + ggtitle("Original PCA")
grid.dplyr::arrange(p1, p2, ncol = 2)
p1 <- ggplot(as_tibble(shiny_env$pca)) + geom_point(aes(x=PC1, y=PC2) ,color="red") + ggtitle("Shiny PCA")
p1 <- ggplot(as_tibble(shiny_env$pca)) + geom_point(aes(x=PC1, y=PC2) ,color="red") + ggtitle("Shiny PCA")
p2 <- ggplot(as_tibble(original$pca$x)) + geom_point(aes(x=PC1, y=PC2), color ="blue") + ggtitle("Original PCA")
p1
p2
grid.dplyr::arrange(p1, p2, ncol = 2)
grid.arrange(p1, p2, ncol = 2)
print("Shiny number of cells after correlation filtering")
dim(shiny_env$affectation)[1]
print("Original number of cells after correlation filtering")
dim(original$affectation)[1]
print("Shiny number of cells after correlation filtering")
dim(shiny_env$affectation)[1]
print("Original number of cells after correlation filtering")
dim(original$affectation)[1]
print("Common cells")
length(intersect(shiny_env$affectation$barcode,original$affectation$barcode)) #Common Barcodes after Correlation Clust 759
print("Different cells")
length(setdiff(shiny_env$affectation$barcode,original$affectation$barcode)) #Different Barcodes after Correlation Clust  10
p1 <- VennDiagram_2(shiny_env$affectation$barcode,original$affectation$barcode,savePNG = F,groups = c("Shiny","Original"),title = "Number of common barcodes after correlation filtering")
affectations = inner_join(as_tibble(shiny_env$affectation), as_tibble(original$affectation), by=c("barcode"), suffix=c(".s",".o"))
#Class 2 in shiny corresponds to class 3 in Original
affectations = affectations %>% dplyr::mutate(ChromatinGroup.o = ifelse(ChromatinGroup.o=="C1","C3",ChromatinGroup.o))
affectations = affectations %>% dplyr::mutate(ChromatinGroup.o = ifelse(ChromatinGroup.o=="C2","C1",ChromatinGroup.o))
affectations = affectations %>% dplyr::mutate(ChromatinGroup.o = ifelse(ChromatinGroup.o=="C3","C2",ChromatinGroup.o))
print("Number of barcode not assigned to the same classe :")
dim(affectations %>% dplyr::filter(ChromatinGroup.s != ChromatinGroup.o))[1]
affectations = inner_join(as_tibble(shiny_env$affectation), as_tibble(original$affectation), by=c("barcode"), suffix=c(".s",".o"))
#Class 2 in shiny corresponds to class 3 in Original
# affectations = affectations %>% dplyr::mutate(ChromatinGroup.o = ifelse(ChromatinGroup.o=="C1","C3",ChromatinGroup.o))
# affectations = affectations %>% dplyr::mutate(ChromatinGroup.o = ifelse(ChromatinGroup.o=="C2","C1",ChromatinGroup.o))
# affectations = affectations %>% dplyr::mutate(ChromatinGroup.o = ifelse(ChromatinGroup.o=="C3","C2",ChromatinGroup.o))
print("Number of barcode not assigned to the same classe :")
dim(affectations %>% dplyr::filter(ChromatinGroup.s != ChromatinGroup.o))[1]
affectations
tab_bc = inner_join(affectations %>% group_by(ChromatinGroup.s) %>% summarise(count = n()),affectations %>% group_by(ChromatinGroup.o) %>% summarise(count = n()),by=c("ChromatinGroup.s"="ChromatinGroup.o") )
colnames(tab_bc)[2:3] = c("Class_Shiny","Class_Original")
tab_bc
sel = intersect(shiny_env$my.res_save$ID,original$my.res$ID)
shiny_env$my.res_save = shiny_env$my.res_save %>% dplyr::filter(ID %in% sel)
original$my.res = as_tibble(original$my.res) %>% dplyr::arrange(ID)
tab
tab  <- inner_join(shiny_env$my.res_save, original$my.res, by="ID")
Lab.palette <- colorRampPalette(c("blue", "orange", "red"), space = "Lab")
par(mfrow = c(3, 1))
#Counts
smoothScatter(tab %>% select(Count.C1,Count.C2.y), colramp = Lab.palette,
## pch=NA: do not draw them
nrpoints = 0, ret.selection=TRUE, xlab = "Shiny", ylab="Original",main="Shiny vs Original (count C2)",xlim = c(0,quantile(tab$Count.C1 ,0.99)) ,ylim = c(0,quantile(tab$Count.C2.y,0.99)))
#Qvalues
tab_qval_C2 = tab %>% select(qval.C1,qval.C2.y) %>% dplyr::mutate(qval.C1 =-log10(qval.C1), qval.C2.y = -log10(qval.C2.y))
smoothScatter(tab_qval_C2, colramp = Lab.palette, nrpoints = 0, ret.selection=TRUE, xlab = "Shiny", ylab="Original",main="Shiny vs Original (-log10 Q-value C2)",xlim = c(0,quantile(tab_qval_C2$qval.C1 ,0.99) ),ylim = c(0,quantile(tab_qval_C2$qval.C2.y,0.99)))
#Fold Change
tab_FC_C2 = tab %>% select(cdiff.C1, log2FC.C2)
smoothScatter(tab_FC_C2 , colramp = Lab.palette, nrpoints = 0, ret.selection=TRUE, xlab = "Shiny", ylab="Original",main="Shiny vs Original (logFC C2)",xlim = c(quantile(tab_FC_C2$cdiff.C1 ,0.02),quantile(tab_FC_C2$cdiff.C1 ,0.99) ),ylim = c(quantile(tab_FC_C2$log2FC.C2,0.02),quantile(tab_FC_C2$log2FC.C2,0.99)))
par(mfrow = c(3, 1))
#Counts
smoothScatter(tab %>% select(Count.C2.x,Count.C2.y), colramp = Lab.palette,
## pch=NA: do not draw them
nrpoints = 0, ret.selection=TRUE, xlab = "Shiny", ylab="Original",main="Shiny vs Original (count C2)",xlim = c(0,quantile(tab$Count.C2.x ,0.99)) ,ylim = c(0,quantile(tab$Count.C2.y,0.99)))
#Qvalues
tab_qval_C2 = tab %>% select(qval.C2.x,qval.C2.y) %>% dplyr::mutate(qval.C1 =-log10(qval.C2.x), qval.C2.y = -log10(qval.C2.y))
smoothScatter(tab_qval_C2, colramp = Lab.palette, nrpoints = 0, ret.selection=TRUE, xlab = "Shiny", ylab="Original",main="Shiny vs Original (-log10 Q-value C2)",xlim = c(0,quantile(tab_qval_C2$qval.C2.x ,0.99) ),ylim = c(0,quantile(tab_qval_C2$qval.C2.y,0.99)))
#Fold Change
tab_FC_C2 = tab %>% select(cdiff.C2, log2FC.C2)
smoothScatter(tab_FC_C2 , colramp = Lab.palette, nrpoints = 0, ret.selection=TRUE, xlab = "Shiny", ylab="Original",main="Shiny vs Original (logFC C2)",xlim = c(quantile(tab_FC_C2$cdiff.C2 ,0.02),quantile(tab_FC_C2$cdiff.C2 ,0.99) ),ylim = c(quantile(tab_FC_C2$log2FC.C2,0.02),quantile(tab_FC_C2$log2FC.C2,0.99)))
par(mfrow = c(3, 1))
#Counts
smoothScatter(tab %>% select(Count.C2.x,Count.C2.y), colramp = Lab.palette,
## pch=NA: do not draw them
nrpoints = 0, ret.selection=TRUE, xlab = "Shiny", ylab="Original",main="Shiny vs Original (count C2)",xlim = c(0,quantile(tab$Count.C2.x ,0.99)) ,ylim = c(0,quantile(tab$Count.C2.y,0.99)))
#Qvalues
tab_qval_C2 = tab %>% select(qval.C2.x,qval.C2.y) %>% dplyr::mutate(qval.C2.x =-log10(qval.C2.x), qval.C2.y = -log10(qval.C2.y))
smoothScatter(tab_qval_C2, colramp = Lab.palette, nrpoints = 0, ret.selection=TRUE, xlab = "Shiny", ylab="Original",main="Shiny vs Original (-log10 Q-value C2)",xlim = c(0,quantile(tab_qval_C2$qval.C2.x ,0.99) ),ylim = c(0,quantile(tab_qval_C2$qval.C2.y,0.99)))
#Fold Change
tab_FC_C2 = tab %>% select(cdiff.C2, log2FC.C2)
smoothScatter(tab_FC_C2 , colramp = Lab.palette, nrpoints = 0, ret.selection=TRUE, xlab = "Shiny", ylab="Original",main="Shiny vs Original (logFC C2)",xlim = c(quantile(tab_FC_C2$cdiff.C2 ,0.02),quantile(tab_FC_C2$cdiff.C2 ,0.99) ),ylim = c(quantile(tab_FC_C2$log2FC.C2,0.02),quantile(tab_FC_C2$log2FC.C2,0.99)))
#Shiny, sorted diff analysis, multiBatchPCA (2 batch)
passing_threshold_shiny=list()
passing_threshold_shiny$C1 = shiny_env$my.res_save %>% dplyr::filter( (qval.C1 <0.01 & (abs(cdiff.C1) > 1 ) ) )
#Shiny, sorted diff analysis, multiBatchPCA (2 batch)
passing_threshold_original=list()
passing_threshold_original$C2 = original$my.res %>% dplyr::filter( (qval.C2 <0.01 & (abs(log2FC.C2) > 1) ) )
over.o =  c(length(which(passing_threshold_original$C2$log2FC.C2>1)))
under.o = c( length(which(passing_threshold_original$C2$log2FC.C2< -1)))
over.s =  c(length(which(passing_threshold_shiny$C1$cdiff.C1>1)))
under.s = c( length(which(passing_threshold_shiny$C1$cdiff.C1< -1)))
over.o = as.matrix(over.o)
rownames(over.o) = c("C2")
over.s = as.matrix(over.s)
rownames(over.s) = c("C2")
under.o = as.matrix(under.o)
rownames(under.o) = c("C2")
under.s = as.matrix(under.s)
rownames(under.s) = c("C2")
par(mfrow=c(1,2))
mylim <- range(c(over.o, -under.o))
barplot(t(as.matrix(over.o)), col="red", las=1, ylim=mylim, main="Original Differentially bound regions",
ylab="Number of regions", axes=F)
barplot(t(as.matrix(-under.o)), col="forestgreen", ylim=mylim, add=T, axes=F)
z <- axis(2, pos=-10,seq(-300,1500,150))
axis(2, at=z, labels=abs(z), las=1)
mylim <- range(c(over.s, -under.s))
barplot(t(as.matrix(over.s)), col="red", las=1, ylim=mylim, main="Shiny Differentially bound regions",
ylab="Number of regions", axes=F)
barplot(t(as.matrix(-under.s)), col="forestgreen", ylim=mylim, add=T, axes=F)
z <- axis(2, pos=-10,at = seq(-300,1500,150))
axis(2, at=z, labels=abs(z), las=1)
passing_threshold_shiny=list()
passing_threshold_shiny$C2 = shiny_env$my.res_save %>% dplyr::filter( (qval.C2 <0.01 & (abs(cdiff.C2) > 1 ) ) )
#Shiny, sorted diff analysis, multiBatchPCA (2 batch)
passing_threshold_original=list()
p
passing_threshold_original$C2 = original$my.res %>% dplyr::filter( (qval.C2 <0.01 & (abs(log2FC.C2) > 1) ) )
over.o =  c(length(which(passing_threshold_original$C2$log2FC.C2>1)))
under.o = c( length(which(passing_threshold_original$C2$log2FC.C2< -1)))
over.s =  c(length(which(passing_threshold_shiny$C1$cdiff.C2>1)))
under.s = c( length(which(passing_threshold_shiny$C1$cdiff.C2< -1)))
over.o = as.matrix(over.o)
rownames(over.o) = c("C2")
over.s = as.matrix(over.s)
rownames(over.s) = c("C2")
under.o = as.matrix(under.o)
rownames(under.o) = c("C2")
under.s = as.matrix(under.s)
rownames(under.s) = c("C2")
par(mfrow=c(1,2))
mylim <- range(c(over.o, -under.o))
barplot(t(as.matrix(over.o)), col="red", las=1, ylim=mylim, main="Original Differentially bound regions",
ylab="Number of regions", axes=F)
barplot(t(as.matrix(-under.o)), col="forestgreen", ylim=mylim, add=T, axes=F)
z <- axis(2, pos=-10,seq(-300,1500,150))
axis(2, at=z, labels=abs(z), las=1)
mylim <- range(c(over.s, -under.s))
barplot(t(as.matrix(over.s)), col="red", las=1, ylim=mylim, main="Shiny Differentially bound regions",
ylab="Number of regions", axes=F)
barplot(t(as.matrix(-under.s)), col="forestgreen", ylim=mylim, add=T, axes=F)
z <- axis(2, pos=-10,at = seq(-300,1500,150))
axis(2, at=z, labels=abs(z), las=1)
passing_threshold_original=list()
passing_threshold_original$C2 = original$my.res %>% dplyr::filter( (qval.C2 <0.01 & (abs(log2FC.C2) > 1) ) )
over.o =  c(length(which(passing_threshold_original$C2$log2FC.C2>1)))
under.o = c( length(which(passing_threshold_original$C2$log2FC.C2< -1)))
over.s =  c(length(which(passing_threshold_shiny$C2$cdiff.C2>1)))
under.s = c( length(which(passing_threshold_shiny$C2$cdiff.C2< -1)))
passing_threshold_shiny=list()
passing_threshold_shiny$C2 = shiny_env$my.res_save %>% dplyr::filter( (qval.C2 <0.01 & (abs(cdiff.C2) > 1 ) ) )
#Shiny, sorted diff analysis, multiBatchPCA (2 batch)
passing_threshold_original=list()
passing_threshold_original$C2 = original$my.res %>% dplyr::filter( (qval.C2 <0.01 & (abs(log2FC.C2) > 1) ) )
over.o =  c(length(which(passing_threshold_original$C2$log2FC.C2>1)))
under.o = c( length(which(passing_threshold_original$C2$log2FC.C2< -1)))
over.s =  c(length(which(passing_threshold_shiny$C2$cdiff.C2>1)))
under.s = c( length(which(passing_threshold_shiny$C2$cdiff.C2< -1)))
over.o = as.matrix(over.o)
rownames(over.o) = c("C2")
over.s = as.matrix(over.s)
rownames(over.s) = c("C2")
under.o = as.matrix(under.o)
rownames(under.o) = c("C2")
under.s = as.matrix(under.s)
rownames(under.s) = c("C2")
par(mfrow=c(1,2))
mylim <- range(c(over.o, -under.o))
barplot(t(as.matrix(over.o)), col="red", las=1, ylim=mylim, main="Original Differentially bound regions",
ylab="Number of regions", axes=F)
barplot(t(as.matrix(-under.o)), col="forestgreen", ylim=mylim, add=T, axes=F)
z <- axis(2, pos=-10,seq(-300,1500,150))
axis(2, at=z, labels=abs(z), las=1)
mylim <- range(c(over.s, -under.s))
barplot(t(as.matrix(over.s)), col="red", las=1, ylim=mylim, main="Shiny Differentially bound regions",
ylab="Number of regions", axes=F)
barplot(t(as.matrix(-under.s)), col="forestgreen", ylim=mylim, add=T, axes=F)
z <- axis(2, pos=-10,at = seq(-300,1500,150))
axis(2, at=z, labels=abs(z), las=1)
```{r, echo=FALSE,warning=FALSE,message=F}
print("Differentially expressed regions : C2-3")
VennDiagram_2(as.vector(passing_threshold_shiny$C2$ID),as.vector(passing_threshold_original$C2$ID),savePNG =F,title = "Shiny_vs_Original_C2-3_common_diff_regions",groups = c("Shiny","Original"))
shiny_env$enrich_tab_C2 = shiny_env$enrich_tab_C2 %>% dplyr::filter(Class == "hallmark" | Class == "c2_curated")
original$enrich_tab_C2 = original$enrich_tab_C2 %>% dplyr::filter(Class == "hallmark" | Class == "c2_curated")
shiny_env$enrich_tab_C2 = shiny_env$enrich_tab_C2 %>% dplyr::filter(Class == "hallmark" | Class == "c2_curated")
original$enrich_tab_C2 = original$enrich_tab_C2 %>% dplyr::filter(Class == "hallmark" | Class == "c2_curated")
#Compare enriched
print("Common gene sets found enriched in C2")
intersect(shiny_env$enrich_tab_C2$Gene.Set, original$enrich_tab_C2$Gene.Set)
p1 = ggplot(data =shiny_env$enrich_tab_C2[1:min(10,length(shiny_env$enrich_tab_C2$Gene.Set)),], aes(x=sort(as.factor(Gene.Set)),label = shiny_env$enrich_tab_C2$Gene.Set[1:min(10,length(shiny_env$enrich_tab_C2$Gene.Set))],y= -log10(`q-value`))) + geom_col(fill="#B8B8B8") +geom_text(aes(y = 0), angle = 90, hjust = -.05, size = 2.5) + theme(axis.text.x = element_blank()) + xlab("GeneSets") + ggtitle("Top 10 Enriched Gene Sets Shiny")
original$enrich_tab_C2$`q-value` = as.double(gsub(pattern = ",",fixed =T,replacement = ".",original$enrich_tab_C2$`q-value`))
p2 =ggplot(data =original$enrich_tab_C2[1:min(10,length(original$enrich_tab_C2$Gene.Set)),], aes(x=sort(as.factor(Gene.Set)),label = original$enrich_tab_C2$Gene.Set[1:min(10,length(original$enrich_tab_C2$Gene.Set))],y= -log10(`q-value`))) + geom_col(fill="#B8B8B8") +geom_text(aes(y = 0), angle = 90, hjust = -.05, size = 2.5) + theme(axis.text.x = element_blank()) + xlab("GeneSets") + ggtitle("Top 10 Enriched Gene Sets Original")
grid.arrange(p1,p2,ncol=2)
p1 = ggplot(data =shiny_env$enrich_tab_C2[1:min(10,length(shiny_env$enrich_tab_C2$Gene.Set)),], aes(x=sort(as.factor(Gene.Set)),label = shiny_env$enrich_tab_C2$Gene.Set[1:min(10,length(shiny_env$enrich_tab_C2$Gene.Set))],y= -log10(`q-value`))) + geom_col(fill="#B8B8B8") +geom_text(aes(y = 0), angle = 90, hjust = -.05, size = 2.5) + theme(axis.text.x = element_blank()) + xlab("GeneSets") + ggtitle("Top 10 Enriched Gene Sets Shiny")
original$enrich_tab_C2$`q-value` = as.double(gsub(pattern = ",",fixed =T,replacement = ".",original$enrich_tab_C2$`q-value`))
p2 =ggplot(data =original$enrich_tab_C2[1:min(10,length(original$enrich_tab_C2$Gene.Set)),], aes(x=sort(as.factor(Gene.Set)),label = original$enrich_tab_C2$Gene.Set[1:min(10,length(original$enrich_tab_C2$Gene.Set))],y= -log10(`q-value`))) + geom_col(fill="#B8B8B8") +geom_text(aes(y = 0), angle = 90, hjust = -.05, size = 2.5) + theme(axis.text.x = element_blank()) + xlab("GeneSets") + ggtitle("Top 10 Enriched Gene Sets Original")
grid.arrange(p1,p2,ncol=2)
R1_LBC_barcoded
library(tidyverse)
library(ggplot2)
summary_lineageBC = read_delim("~/Documents/Scripts/Tracing/LineageTracing/summary_lineageBC.txt", delim="\t")
summary_lineageBC$Total_reads = summary_lineageBC$Total_reads / 4
summary_dropBC = read_delim("~/Documents/Scripts/Tracing/LineageTracing/summary_dropBC.txt", delim="\t")
summary_dropBC$Total_reads = summary_dropBC$Total_reads / 4
#Focus on R10 : a perfect mix of LBC/Hifibio and R1/R2 barcodes on a total of 15078 reads
R10_LBC_R1_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R10.R1_LBC_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
R10_LBC_R2_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R10.R2_LBC_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
R10_Hifibio_R1_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R10.R1_Hifbio_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
R10_Hifibio_R2_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R10.R2_Hifbio_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
R10_read1 = read_delim("~/Documents/Scripts/Tracing/LineageTracing/data/L321R10/R10_read1.txt", delim = "\t", col_names = c("read","sequence"))
R10_read2 = read_delim("~/Documents/Scripts/Tracing/LineageTracing/data/L321R10/R10_read2.txt", delim = "\t", col_names = c("read","sequence"))
R10_read1 = R10_read1 %>% dplyr::mutate(read = gsub('@','',read)) %>% dplyr::mutate(read = gsub('\\s.+','',read))
R10_read2 = R10_read2 %>% dplyr::mutate(read = gsub('@','',read)) %>% dplyr::mutate(read = gsub('\\s.+','',read))
TOP_forward="CTAGAACACTCGAGATCAG"
TOP_reverse="CTGATCTCGAGTGTTCTAG"
BOT_forward="ATGATACATCATACCACA"
BOT_reverse="TGTGGTATGATGTATCAT"
linker_forward="CAACGTGATTGCTTGTGACTTAA"
linker_reverse="TTAAGTCACAAGCAATCACGTTG"
####Are the reads matching a barcode di-mers of barcodes ?
###Check by checking if reads matching a barcode on R1 are the same as  those identified in R2
##LBC reads
R10_LBC_R1_barcode_reads
R10_LBC_R2_barcode_reads
#Number of 'di-mers'
dim(inner_join(R10_LBC_R1_barcode_reads,R10_LBC_R2_barcode_reads,by="read"))[1] #308
##Hifibio reads
R10_Hifibio_R1_barcode_reads
R10_Hifibio_R2_barcode_reads
#Number of 'di-mers'
dim(inner_join(R10_Hifibio_R1_barcode_reads,R10_Hifibio_R2_barcode_reads,by="read"))[1] #93
##LBC - Hifibio reads
#Number of 'di-mers' R1 - R1
dim(inner_join(R10_LBC_R1_barcode_reads,R10_Hifibio_R1_barcode_reads,by="read"))[1] #0
#Number of 'di-mers' R2 - R2
dim(inner_join(R10_LBC_R2_barcode_reads,R10_Hifibio_R2_barcode_reads,by="read"))[1] #0
#Number of 'di-mers' R1 - R2  LBC Hifibio
dim(inner_join(R10_LBC_R1_barcode_reads,R10_Hifibio_R2_barcode_reads,by="read"))[1] # 64
#Number of 'di-mers' R1 - R2 Hifibio LBC
dim(inner_join(R10_LBC_R2_barcode_reads,R10_Hifibio_R1_barcode_reads,by="read"))[1] #53
##Hifibio reads
R10_Hifibio_R1_barcode_reads
R10_Hifibio_R2_barcode_reads
#Number of 'di-mers'
dim(inner_join(R10_Hifibio_R1_barcode_reads,R10_Hifibio_R2_barcode_reads,by="read"))[1]
#Analysis of sequences
R1_LBC_barcoded = inner_join(R10_LBC_R1_barcode_reads,R10_read1,by="read")
R2_LBC_barcoded = inner_join(R10_LBC_R2_barcode_reads,R10_read2,by="read")
R1_Hifibio_barcoded = inner_join(R10_Hifibio_R1_barcode_reads,R10_read1,by="read")
R2_Hifibio_barcoded = inner_join(R10_Hifibio_R2_barcode_reads,R10_read2,by="read")
seq = R10_read1$sequence
seq[agrep(TOP_forward,seq,fixed = T)]
agrep(TOP_reverse,seq,fixed = T)
agrep(BOT_forward,seq,fixed = T)
agrep(BOT_reverse,seq,fixed = T)
R1_LBC_barcoded = R1_LBC_barcoded %>% dplyr::mutate(hasTop = ifelse(), hasBot)
R1_LBC_barcoded %>% group_by(barcode) %>% summarise(count = n()) %>% ggplot() + geom_histogram(aes(count))
View(summary_lineageBC)
#bash :
#i=01
#gzip -cd L321R${i}.R1.fastq.gz | awk 'NR%4{printf "%s\t",$0;next;}1' | cut -f1,2 > R${i}_read1.txt
#gzip -cd L321R${i}.R2.fastq.gz | awk 'NR%4{printf "%s\t",$0;next;}1' | cut -f1,2 > R${i}_read2.txt
R10_read1 = read_delim("~/Documents/Scripts/Tracing/LineageTracing/data/L321R10/R11_read1.txt", delim = "\t", col_names = c("read","sequence"))
R10_LBC_R1_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R11.R1_LBC_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
R10_LBC_R2_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R11.R2_LBC_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
R10_Hifibio_R1_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R11.R1_Hifbio_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
R10_Hifibio_R2_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R11.R2_Hifbio_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
R10_read1 = read_delim("~/Documents/Scripts/Tracing/LineageTracing/data/L321R11/R11_read1.txt", delim = "\t", col_names = c("read","sequence"))
R10_read2 = read_delim("~/Documents/Scripts/Tracing/LineageTracing/data/L321R11/R11_read2.txt", delim = "\t", col_names = c("read","sequence"))
R10_read1 = read_delim("~/Documents/Scripts/Tracing/LineageTracing/data/L321R11/R11_read1.txt", delim = "\t", col_names = c("read","sequence"))
R10_read2 = read_delim("~/Documents/Scripts/Tracing/LineageTracing/data/L321R11/R11_read2.txt", delim = "\t", col_names = c("read","sequence"))
R10_read1 = R10_read1 %>% dplyr::mutate(read = gsub('@','',read)) %>% dplyr::mutate(read = gsub('\\s.+','',read))
R10_read2 = R10_read2 %>% dplyr::mutate(read = gsub('@','',read)) %>% dplyr::mutate(read = gsub('\\s.+','',read))
R10_LBC_R1_barcode_reads
R10_LBC_R2_barcode_reads
##LBC reads
R10_LBC_R1_barcode_reads
R10_LBC_R2_barcode_reads
#Number of 'di-mers'
dim(inner_join(R10_LBC_R1_barcode_reads,R10_LBC_R2_barcode_reads,by="read"))[1] #308
inner_join(R10_LBC_R1_barcode_reads,R10_LBC_R2_barcode_reads,by="read")
##Hifibio reads
R10_Hifibio_R1_barcode_reads
R10_Hifibio_R2_barcode_reads
#Number of 'di-mers'
dim(inner_join(R10_Hifibio_R1_barcode_reads,R10_Hifibio_R2_barcode_reads,by="read"))[1] #93
#Number of 'di-mers' R1 - R1
dim(inner_join(R10_LBC_R1_barcode_reads,R10_Hifibio_R1_barcode_reads,by="read"))[1] #0
#Number of 'di-mers' R2 - R2
dim(inner_join(R10_LBC_R2_barcode_reads,R10_Hifibio_R2_barcode_reads,by="read"))[1] #0
#Number of 'di-mers' R1 - R2  LBC Hifibio
dim(inner_join(R10_LBC_R1_barcode_reads,R10_Hifibio_R2_barcode_reads,by="read"))[1] # 64
#Number of 'di-mers' R1 - R2 Hifibio LBC
dim(inner_join(R10_LBC_R2_barcode_reads,R10_Hifibio_R1_barcode_reads,by="read"))[1] #53
##Hifibio reads
R10_Hifibio_R1_barcode_reads
R10_Hifibio_R2_barcode_reads
#Number of 'di-mers'
dim(inner_join(R10_Hifibio_R1_barcode_reads,R10_Hifibio_R2_barcode_reads,by="read"))[1]
R1_LBC_barcoded = inner_join(R10_LBC_R1_barcode_reads,R10_read1,by="read")
R2_LBC_barcoded = inner_join(R10_LBC_R2_barcode_reads,R10_read2,by="read")
R1_Hifibio_barcoded = inner_join(R10_Hifibio_R1_barcode_reads,R10_read1,by="read")
R2_Hifibio_barcoded = inner_join(R10_Hifibio_R2_barcode_reads,R10_read2,by="read")
R2_Hifibio_barcoded
R1_Hifibio_barcoded
R2_LBC_barcoded
R1_LBC_barcoded
R2_Hifibio_barcoded %>% group_by(barcode) %>% summarise(count = n()) %>% ggplot() + geom_histogram(aes(count))
R2_Hifibio_barcoded %>% group_by(barcode) %>% summarise(count = n())
R2_Hifibio_barcoded %>% group_by(barcode) %>% summarise(count = n()) %>% arrange(desc(count))
R2_Hifibio_barcoded
R2_Hifibio_barcoded %>% group_by(seq) %>% summarise(count = n()) %>% arrange(desc(count)) #BC811568 represents 40087 seq
R2_Hifibio_barcoded %>% group_by(sequence) %>% summarise(count = n()) %>% arrange(desc(count)) #BC811568 represents 40087 seq
R2_Hifibio_barcoded
R2_Hifibio_barcoded
seq
seq[agrep(TOP_forward,seq,fixed = T)]
seq = R10_read2$sequence
seq[agrep(TOP_forward,seq,fixed = T)]
seq = R10_read1$sequence
length(seq[agrep(TOP_forward,seq,fixed = T)])
length(seq)
R2_Hifibio_barcoded %>% group_by(seq) %>% summarise(count = n()) %>% arrange(desc(count)) #BC811568 represents 40087 seq
R2_Hifibio_barcoded %>% group_by(seq) %>% summarise(count = n()) %>% arrange(desc(count)) #BC811568 represents 40087 seq
R2_Hifibio_barcoded %>% group_by(seq) %>% summarise(count = n()) %>% arrange(desc(count))
R2_Hifibio_barcoded %>% group_by(sequence) %>% summarise(count = n()) %>% arrange(desc(count))
summary_lineageBC = read_delim("~/Documents/Scripts/Tracing/LineageTracing/summary_lineageBC.txt", delim="\t")
summary_lineageBC$Total_reads = summary_lineageBC$Total_reads / 4
summary_dropBC = read_delim("~/Documents/Scripts/Tracing/LineageTracing/summary_dropBC.txt", delim="\t")
summary_dropBC$Total_reads = summary_dropBC$Total_reads / 4
#Focus on R10 : a perfect mix of LBC/Hifibio and R1/R2 barcodes on a total of 15078 reads
LBC_R1_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R11.R1_LBC_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
LBC_R2_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R11.R2_LBC_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
Hifibio_R1_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R11.R1_Hifbio_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
Hifibio_R2_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R11.R2_Hifbio_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
#bash :
#i=01
#gzip -cd L321R${i}.R1.fastq.gz | awk 'NR%4{printf "%s\t",$0;next;}1' | cut -f1,2 > R${i}_read1.txt
#gzip -cd L321R${i}.R2.fastq.gz | awk 'NR%4{printf "%s\t",$0;next;}1' | cut -f1,2 > R${i}_read2.txt
read1 = read_delim("~/Documents/Scripts/Tracing/LineageTracing/data/L321R11/R11_read1.txt", delim = "\t", col_names = c("read","sequence"))
read2 = read_delim("~/Documents/Scripts/Tracing/LineageTracing/data/L321R11/R11_read2.txt", delim = "\t", col_names = c("read","sequence"))
read1 = read1 %>% dplyr::mutate(read = gsub('@','',read)) %>% dplyr::mutate(read = gsub('\\s.+','',read))
read2 = read2 %>% dplyr::mutate(read = gsub('@','',read)) %>% dplyr::mutate(read = gsub('\\s.+','',read))
ref_lineage_barcodes = read_delim("~/Documents/Scripts/Tracing/LineageTracing/LG22_filtered.fa", delim = "\t", col_names = c("barcode"))
ref_lineage_barcodes
ref_lineage_barcodes %>% dplyr::filter(grep('>',barcode) != 1)
ref_lineage_barcodes = ref_lineage_barcodes %>% dplyr::filter(grep('>',barcode) != 1)
ref_lineage_barcodes
grep('>',barcode)
ref_lineage_barcodes = ref_lineage_barcodes[ -grep('>',barcode),]
ref_lineage_barcodes
ref_lineage_barcodes = ref_lineage_barcodes[ -grep('>',ref_lineage_barcodes$barcode),]
ref_lineage_barcodes
ref_lineage_barcodes$barcode_id = 1:dim(ref_lineage_barcodes)[1]
ref_lineage_barcodes
length(seq[agrep(TOP_forward,seq,fixed = T)])
R2_Hifibio_barcoded
R1_Hifibio_barcoded
#Analysis of sequences
R1_LBC_barcoded = inner_join(LBC_R1_barcode_reads,read1,by="read")
R2_LBC_barcoded = inner_join(LBC_R2_barcode_reads,read2,by="read")
R1_Hifibio_barcoded = inner_join(Hifibio_R1_barcode_reads,read1,by="read")
R2_Hifibio_barcoded = inner_join(Hifibio_R2_barcode_reads,read2,by="read")
R2_Hifibio_barcoded
R1_Hifibio_barcoded
R2_Hifibio_barcoded
#Analysis of sequences
R1_LBC_barcoded = inner_join(LBC_R1_barcode_reads,read2,by="read")
R2_LBC_barcoded = inner_join(LBC_R2_barcode_reads,read2,by="read")
R1_LBC_barcoded
LBC_R1_barcode_reads
#Analysis of sequences
R1_Hifibio_barcoded = inner_join(Hifibio_R1_barcode_reads,read2,by="read")
View(R1_Hifibio_barcoded)
R1_Hifibio_barcoded
Hifibio_R2_barcode_reads
LBC_R1_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R11.R1_LBC_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
LBC_R2_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R11.R2_LBC_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
Hifibio_R1_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R11.R1_Hifbio_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
Hifibio_R2_barcode_reads = read_delim("~/Documents/Scripts/Tracing/LineageTracing/output/L321R11.R2_Hifbio_read_barcodes.txt", delim = "\t", col_names = c("read","barcode"))
#Analysis of sequences
R1_Hifibio_barcoded = inner_join(Hifibio_R2_barcode_reads,read1,by="read")
Hifibio_R2_barcode_reads
R1_Hifibio_barcoded
#Analysis of sequences
R1_Hifibio_barcoded = inner_join(Hifibio_R2_barcode_reads,read1,by="read")
R1_Hifibio_barcoded
R1_Hifibio_barcoded %>% group_by(barcode) %>% summarise(count = n()) %>% arrange(desc(count)) #BC811568 represents 40087 seq
R1_Hifibio_barcoded %>% group_by(sequence) %>% summarise(count = n()) %>% arrange(desc(count)) #BC811568 represents 40087 seq
R1_Hifibio_barcoded %>% group_by(barcode) %>% summarise(count = n()) %>% arrange(desc(count)) #BC811568 represents 40087 seq
R1_Hifibio_barcoded %>% group_by(sequence) %>% summarise(count = n()) %>% arrange(desc(count)) #BC811568 represents 40087 seq
R1_Hifibio_barcoded = inner_join(Hifibio_R2_barcode_reads,read2,by="read")
#Analysis of sequences
R1_Hifibio_barcoded = inner_join(Hifibio_R2_barcode_reads,read1,by="read")
R2_Hifibio_barcoded = inner_join(Hifibio_R2_barcode_reads,read2,by="read")
R2_Hifibio_barcoded
R2_Hifibio_barcoded %>% group_by(barcode) %>% summarise(count = n()) %>% arrange(desc(count)) #BC811568 represents 40087 seq
R2_Hifibio_barcoded %>% group_by(sequence) %>% summarise(count = n()) %>% arrange(desc(count)) #BC811568 represents 40087 seq
R2_Hifibio_barcoded %>% group_by(barcode) %>% summarise(count = n()) %>% arrange(desc(count)) #BC811568 represents 40087 seq
R1_Hifibio_barcoded
nchar("TCTACTAGAACACTCGAGATCAG")
substr(x = "TCTACTAGAACACTCGAGATCAGCTTAGTATTTTGGGAATCACATGTGGTTTAAGTCACGAGCAATCACGTTGGTCATCACACGTCATCACACGGGAC",24,24+18)
R1_Hifibio_barcoded = R1_Hifibio_barcoded %>% mutate (lineage_barcode = substr(sequence,24,24+18))
R1_Hifibio_barcoded
inner_join(ref_lineage_barcodes,R1_Hifibio_barcoded,by=c("lineage_barcode"))
inner_join(ref_lineage_barcodes,R1_Hifibio_barcoded,by="lineage_barcode")
ref_lineage_barcodes
ref_lineage_barcodes = read_delim("~/Documents/Scripts/Tracing/LineageTracing/LG22_filtered.fa", delim = "\t", col_names = c("lineage_barcode"))
ref_lineage_barcodes = ref_lineage_barcodes[ -grep('>',ref_lineage_barcodes$lineage_barcode),]
ref_lineage_barcodes$barcode_id = 1:dim(ref_lineage_barcodes)[1]
inner_join(ref_lineage_barcodes,R1_Hifibio_barcoded,by="lineage_barcode")
ref_lineage_barcodes
R1_Hifibio_barcoded
ref_lineage_barcodes
R1_Hifibio_barcoded = R1_Hifibio_barcoded %>% mutate (lineage_barcode = substr(sequence,24,24+20))
inner_join(ref_lineage_barcodes,R1_Hifibio_barcoded,by="lineage_barcode")
R1_Hifibio_barcoded = R1_Hifibio_barcoded %>% mutate (lineage_barcode = substr(sequence,24,24+18))
for(i in dim(R1_Hifibio_barcoded)[1]){
grep(R1_Hifibio_barcoded$lineage_barcode[i],ref_lineage_barcodes$lineage_barcode)
}
print(grep(R1_Hifibio_barcoded$lineage_barcode[i],ref_lineage_barcodes$lineage_barcode))
for(i in dim(R1_Hifibio_barcoded)[1]){
print(grep(R1_Hifibio_barcoded$lineage_barcode[i],ref_lineage_barcodes$lineage_barcode))
}
dim(R1_Hifibio_barcoded)[1]
grep(R1_Hifibio_barcoded$lineage_barcode[i],ref_lineage_barcodes$lineage_barcode)
grep(R1_Hifibio_barcoded$lineage_barcode[i],ref_lineage_barcodes$lineage_barcode)
print(grep(R1_Hifibio_barcoded$lineage_barcode[i],ref_lineage_barcodes$lineage_barcode))
i=1
print(grep(R1_Hifibio_barcoded$lineage_barcode[i],ref_lineage_barcodes$lineage_barcode))
i=2
print(grep(R1_Hifibio_barcoded$lineage_barcode[i],ref_lineage_barcodes$lineage_barcode))
for(i in dim(R1_Hifibio_barcoded)[1]){
print(R1_Hifibio_barcoded$lineage_barcode[i])
print(grep(R1_Hifibio_barcoded$lineage_barcode[i],ref_lineage_barcodes$lineage_barcode))
}
for(i in 1:dim(R1_Hifibio_barcoded)[1]){
print(R1_Hifibio_barcoded$lineage_barcode[i])
print(grep(R1_Hifibio_barcoded$lineage_barcode[i],ref_lineage_barcodes$lineage_barcode))
}
R1_Hifibio_barcoded$referenced = F
R1_Hifibio_barcoded
R1_Hifibio_barcoded$lineage_barcode_id = NA
R1_Hifibio_barcoded
R1_Hifibio_barcoded$lineage_barcode_id = NA
for(i in 1:dim(R1_Hifibio_barcoded)[1]){
print(R1_Hifibio_barcoded$lineage_barcode[i])
R1_Hifibio_barcoded$lineage_barcode_id =  ref_lineage_barcodes$barcode_id[agrep(R1_Hifibio_barcoded$lineage_barcode[i],ref_lineage_barcodes$lineage_barcode)]
}
for(i in 1:dim(R1_Hifibio_barcoded)[1]){
R1_Hifibio_barcoded$lineage_barcode_id[i] =  ref_lineage_barcodes$barcode_id[agrep(R1_Hifibio_barcoded$lineage_barcode[i],ref_lineage_barcodes$lineage_barcode)]
}
agrep(R1_Hifibio_barcoded$lineage_barcode[i],ref_lineage_barcodes$lineage_barcode)
R1_Hifibio_barcoded$lineage_barcode_id = NA
for(i in 1:dim(R1_Hifibio_barcoded)[1]){
index = agrep(R1_Hifibio_barcoded$lineage_barcode[i],ref_lineage_barcodes$lineage_barcode)
if(length(index)>0) R1_Hifibio_barcoded$lineage_barcode_id[i] =ref_lineage_barcodes$barcode_id[index]
}
R1_Hifibio_barcoded
a = sapply(R1_Hifibio_barcoded$lineage_barcode,function(x){
index = agrep(x,ref_lineage_barcodes$lineage_barcode)
if(length(index)>0) ref_lineage_barcodes$barcode_id[index] else NA
})
R1_Hifibio_barcoded %>% group_by(lineage_barcode) %>% summarise(count=n()) %>% arrange(desc(count))
summ = R1_Hifibio_barcoded %>% group_by(lineage_barcode) %>% summarise(count=n()) %>% arrange(desc(count))
agrep(most_present_seq,summ$lineage_barcode)
most_present_seq = "CTTAGTATTTTGGGAATCA"
summ = R1_Hifibio_barcoded %>% group_by(lineage_barcode) %>% summarise(count=n()) %>% arrange(desc(count))
agrep(most_present_seq,summ$lineage_barcode)
length(agrep(most_present_seq,summ$lineage_barcode))
summ
R1_Hifibio_barcoded %>% group_by(lineage_barcode)
R1_Hifibio_barcoded %>% group_by(lineage_barcode,lineage_barcode) %>% group_by(lineage_barcode) %>% summarise(count=n()) %>% arrange(desc(count))
R1_Hifibio_barcoded %>% group_by(lineage_barcode,lineage_barcode) %>% summarise(count=n()) %>% arrange(desc(count))
R1_Hifibio_barcoded %>% group_by(lineage_barcode,lineage_barcode) %>% summarise(count=n()) %>% arrange(desc(count))
R1_Hifibio_barcoded %>% group_by(barcode,lineage_barcode) %>% summarise(count=n()) %>% arrange(desc(count))
